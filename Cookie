给浏览器设置Cookie

// 为名字和姓氏创建 Cookie
Cookie name = new Cookie("name",
        URLEncoder.encode(req.getParameter("name"), "UTF-8")); // 中文转码
Cookie url = new Cookie("url",
        req.getParameter("url"));

// 为两个 Cookie 设置过期日期为 24 小时后
name.setMaxAge(60*60*24);
url.setMaxAge(60*60*24);

// 在响应头中添加两个 Cookie
resp.addCookie( name );
resp.addCookie( url );

// 设置响应内容类型
resp.setContentType("text/html;charset=UTF-8");

PrintWriter out = resp.getWriter();

====================================================================================

读取浏览器发送的Cookie

protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
      Cookie cookie = null;
      Cookie[] cookies = null;
      // 获取与该域相关的 Cookie 的数组
      cookies = req.getCookies();

      // 设置响应内容类型
      resp.setContentType("text/html;charset=UTF-8");

      PrintWriter out = resp.getWriter();
      String title = "Delete Cookie Example";
      String docType = "<!DOCTYPE html>\n";
      out.println(docType +
              "<html>\n" +
              "<head><title>" + title + "</title></head>\n" +
              "<body bgcolor=\"#f0f0f0\">\n" );
      if( cookies != null ){
          out.println("<h2>Cookie 名称和值</h2>");
          for (int i = 0; i < cookies.length; i++){
              cookie = cookies[i];
              if((cookie.getName()).compareTo("name") == 0 ){
                  cookie.setMaxAge(0);
                  resp.addCookie(cookie);
                  out.print("已删除的 cookie：" +
                          cookie.getName() + "<br/>");
              }
              out.print("名称：" + cookie.getName() + "，");
              out.print("值：" +  cookie.getValue() +" <br/>");
          }
      }else{
          out.println(
                  "<h2 class=\"tutheader\">No Cookie founds</h2>");
      }
      out.println("</body>");
      out.println("</html>");
  }


